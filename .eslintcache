[{"/Users/calebfaillace/Documents/WorkSpace/mercadoLibreTest/mercadolibre_test/src/index.js":"1","/Users/calebfaillace/Documents/WorkSpace/mercadoLibreTest/mercadolibre_test/src/App.js":"2","/Users/calebfaillace/Documents/WorkSpace/mercadoLibreTest/mercadolibre_test/src/reportWebVitals.js":"3","/Users/calebfaillace/Documents/WorkSpace/mercadoLibreTest/mercadolibre_test/src/components/searchComponent/search-component.js":"4","/Users/calebfaillace/Documents/WorkSpace/mercadoLibreTest/mercadolibre_test/src/components/resultComponent/result-component.js":"5","/Users/calebfaillace/Documents/WorkSpace/mercadoLibreTest/mercadolibre_test/src/components/detailComponent/detail-component.js":"6","/Users/calebfaillace/Documents/WorkSpace/mercadoLibreTest/mercadolibre_test/src/components/share-components/breadcrum-component.js":"7"},{"size":1026,"mtime":1611233738580,"results":"8","hashOfConfig":"9"},{"size":552,"mtime":1611173807146,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":1566,"mtime":1611234463239,"results":"12","hashOfConfig":"9"},{"size":3482,"mtime":1611320872502,"results":"13","hashOfConfig":"9"},{"size":2904,"mtime":1611321126968,"results":"14","hashOfConfig":"9"},{"size":548,"mtime":1611318724793,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"kxmplm",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"/Users/calebfaillace/Documents/WorkSpace/mercadoLibreTest/mercadolibre_test/src/index.js",[],["34","35"],"/Users/calebfaillace/Documents/WorkSpace/mercadoLibreTest/mercadolibre_test/src/App.js",[],"/Users/calebfaillace/Documents/WorkSpace/mercadoLibreTest/mercadolibre_test/src/reportWebVitals.js",[],"/Users/calebfaillace/Documents/WorkSpace/mercadoLibreTest/mercadolibre_test/src/components/searchComponent/search-component.js",[],"/Users/calebfaillace/Documents/WorkSpace/mercadoLibreTest/mercadolibre_test/src/components/resultComponent/result-component.js",["36"],"import './result-component.scss';\nimport BreadcrumComponent from '../share-components/breadcrum-component'\nimport { Link, useLocation} from 'react-router-dom';\nimport freeshiping from '../../assets/ic_shipping.png';\nimport React, { useState, useEffect } from \"react\";\nimport CurrencyFormat from 'react-currency-format';\n\nexport default function ResultComponent() {\n\n        const location = useLocation();\n        let query = useQuery();\n        let [productos, setProductos] = useState();\n        let [error, setError] = useState(false);\n        useEffect(() =>{\n            getData();\n        },[location])\n\n        const getData = () => {\n            fetch('/api/items?q='+query.get(\"search\"))\n            .then(response => {\n                if (!response.ok) {\n                    setError(true);\n                    setProductos(null);\n                } else {\n                    response.json().then(data => {\n                        setProductos(data);\n                    });\n                }\n            })\n            \n        }\n    \n        return (<div id=\"resultComponent\" className=\"container\">\n\n                    <BreadcrumComponent categories={productos?.categories}></BreadcrumComponent>\n\n                    <div id=\"list-results\">\n                        {productos ? productos.items.map(producto => (\n                            <div key={producto.id}>\n                                <Link to={`/items/${producto.id}`}>\n                                    <div className=\"row resElement align-items-start\">\n                                        <div>\n                                            <img src={producto.picture} alt=\"imagegoo\" className=\"image-product\"></img>\n                                        </div>\n                                        <div className=\"price-description \">\n                                            <div className=\"price\">\n                                                <span className=\"pricevalue\">\n                                                    <CurrencyFormat value={producto.price.amount} displayType={'text'} thousandSeparator={true} prefix={'$'}></CurrencyFormat>\n                                                </span>\n                                                { producto.free_shipping ?\n                                                <span className=\"freeshipping\">\n                                                    <img src={freeshiping} alt=\"freeShiping\"></img>\n                                                </span> : \"\" }\n                                            </div>\n                                            <span className=\"description\">\n                                                {producto.title}\n                                            </span>\n                                        </div>\n                                        <div className=\"city pull-right\">\n                                            <span className=\"pull-right\">{producto.city}</span>\n                                        </div>\n                                    </div>\n                                </Link>\n                                <hr className=\"line-div\"></hr>\n                            </div>\n                        )) : error ?  <div><h2>Product Not Found</h2></div> : <h1>Cargando...</h1>}\n                        \n                        \n                    </div>\n                </div>);\n}\n\nfunction useQuery(){\nreturn new URLSearchParams(useLocation().search);\n}","/Users/calebfaillace/Documents/WorkSpace/mercadoLibreTest/mercadolibre_test/src/components/detailComponent/detail-component.js",["37"],"import './detail-component.scss';\nimport { useParams } from \"react-router\";\nimport React, { useState, useEffect } from \"react\";\nimport BreadcrumComponent from '../share-components/breadcrum-component';\nimport CurrencyFormat from 'react-currency-format';\n\nexport default function DetailComponent(){\n    \n    let {id} = useParams();\n\n    let [ producto, setProducto] = useState();\n    let [ error, setError] = useState(false); \n    useEffect(() =>{\n        getData();\n    },[])\n\n    const getData = () => {\n        fetch(`/api/items/${id}`)\n        .then(res => {\n            if(!res.ok) {\n                setError(true);\n                setProducto(null);\n            } else {\n                res.json().then(producto => {\n                    setProducto(producto);\n                })\n            }\n        })\n    }\n    \n    return (<div id=\"detail-box\" >\n             <div className=\"container \">\n\n                <BreadcrumComponent categories={producto?.categories}></BreadcrumComponent>\n                \n                {producto ? <div className=\"detail-info\">\n                    <div className=\"row\"> \n                        <div className=\"col-md-8 img-prd\">\n                            <img src={producto.item.picture} alt=\"imgprod\" className=\"img-fluid image-size\"></img>\n                        </div>\n                        <div className=\"col-md-4 name-price\">\n                            <div className=\"newOld\">\n                                <span>{producto.item.condition} - {producto.item.sold_quantity} Vendidos</span>\n                            </div>\n                            <div className=\"name-prod\">\n                                Deco Reverse Sombrero Oxford\n                            </div>\n                            <div className=\"price-prod\">\n                                <CurrencyFormat value={producto.item.price.amount} displayType={'text'} thousandSeparator={true} prefix={'$'}></CurrencyFormat>\n                            </div>\n                            \n                            <div className=\"\">\n                                <button id=\"button-buy\" className=\"btn\">Comprar</button>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-md-8 left-margin\">\n                            <div className=\"desc-title\">\n                                <span>Descripci√≥n del producto</span>\n                            </div>\n                            <div className=\"desc-text\">\n                                <p>{producto.item.description}\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n                </div> : error ? <div><h2>Product Not Found</h2></div> : <h3>Cargando...</h3>}\n             </div>\n            \n        </div>)\n    \n}","/Users/calebfaillace/Documents/WorkSpace/mercadoLibreTest/mercadolibre_test/src/components/share-components/breadcrum-component.js",[],["38","39"],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":16,"column":11,"nodeType":"46","endLine":16,"endColumn":21,"suggestions":"47"},{"ruleId":"44","severity":1,"message":"45","line":15,"column":7,"nodeType":"46","endLine":15,"endColumn":9,"suggestions":"48"},{"ruleId":"40","replacedBy":"49"},{"ruleId":"42","replacedBy":"50"},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.","ArrayExpression",["53"],["54"],["51"],["52"],"no-global-assign","no-unsafe-negation",{"desc":"55","fix":"56"},{"desc":"57","fix":"58"},"Update the dependencies array to be: [getData, location]",{"range":"59","text":"60"},"Update the dependencies array to be: [getData]",{"range":"61","text":"62"},[597,607],"[getData, location]",[472,474],"[getData]"]